FROM harbor.hiscene.net/base/cuda:11.4.3-cudnn8-runtime-ubuntu20.04
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A4B469963BF863CC && \
    sed -i 's/archive.ubuntu.com/mirrors.aliyun.com/g' /etc/apt/sources.list && \
    sed -i 's/security.ubuntu.com/mirrors.aliyun.com/g' /etc/apt/sources.list && \
    apt update

# Prepare and empty machine for building
RUN apt-get update && apt-get install -y \
    cmake \
    build-essential \
    wget \
    zip \
    libboost-filesystem-dev \
    wget  \
    software-properties-common \
    cuda-toolkit


ENV CUDA_HOME=$CUDA_HOME:/usr/local/cuda
ENV PATH=$PATH:/usr/lib:/usr/local/cuda/bin


# 安装OpenSSH服务
RUN apt-get install -y openssh-server

# 设置SSH无密码登录（非生产建议）
RUN mkdir /var/run/sshd
RUN echo 'root:123456' | chpasswd
RUN sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config

# 确保SSH服务在容器启动时自动运行
CMD ["/usr/sbin/sshd", "-D"]


#golang环境
RUN wget https://dl.google.com/go/go1.22.4.linux-amd64.tar.gz --no-check-certificate
RUN tar -xf go1.22.4.linux-amd64.tar.gz -C /usr/local/
RUN rm -f go1.22.4.linux-amd64.tar.gz

ENV PATH=$PATH:/usr/local/go/bin
RUN go env -w GOBIN=/usr/local/go/bin
RUN go env -w GOPROXY=https://goproxy.cn,direct
ENV GO111MODULE=on
ENV GOPATH=/root/go
ENV GOROOT=/usr/local/go
ENV GODEBUG=cgocheck=0
ENV CGO_ENABLED=1

CMD ["/bin/bash"]

EXPOSE 22
# docker run -it --gpus all --privileged=true -p 23:22 -v D:\hiar_face:/hiar_face -v C:\face_recognize:/root/face_recognize --name ubuntu_gpu ubuntu_gpu
